#!/bin/bash

# Make the whole script fail on errors
set -eou pipefail

BASE_BRANCH=${BASE_BRANCH:-"main"}
echo "Using ${BASE_BRANCH} as the default branch (change this with the BASE_BRANCH environment variable)"

if [ ! -z "${TRAVIS_COMMIT_RANGE:-}" ]; then
  # The PREVIOUS_SHA will be equal to the commit that the PR is based on (which
  # is usually some commit on the main branch), or the commit that the last
  # build was triggered for. Travis gives us a range of commits. We need the
  # first one.
  PREVIOUS_SHA="${TRAVIS_COMMIT_RANGE//\.\..*/}"
  if ! git cat-file -e "$PREVIOUS_SHA"^{commit}; then
    # When force-pushing, the base commit in the commit range might not be a
    # real commit
    PREVIOUS_SHA=""
  elif [ "$TRAVIS_EVENT_TYPE" = "push" ] && [ "$TRAVIS_BRANCH" = "$BASE_BRANCH" ]; then
    # This is a build on the default/base branch. We'll reset PREVIOUS_SHA to
    # prevent making any comparison.
    PREVIOUS_SHA=""
  fi
else
  PREVIOUS_SHA=""
fi
export PREVIOUS_SHA
export CURRENT_SHA="${TRAVIS_PULL_REQUEST_SHA:-$TRAVIS_COMMIT}"

# Allow github base to be overridden. Useful for enterprise installations.
GITHUB_BASE=${GITHUB_BASE:-"https://github.com"}
if [ -z "${TRAVIS_PULL_REQUEST:-}" ]; then
  export CHANGE_URL="${GITHUB_BASE}/${TRAVIS_REPO_SLUG}/commit/${TRAVIS_COMMIT}"
else
  # Construct a URL to the PR so that we can link the happo reports to it
  export CHANGE_URL="${GITHUB_BASE}/${TRAVIS_REPO_SLUG}/pull/${TRAVIS_PULL_REQUEST}"
fi

# Delegate to the canonical script. It will use the env variables we have
# prepared.
happo-ci
